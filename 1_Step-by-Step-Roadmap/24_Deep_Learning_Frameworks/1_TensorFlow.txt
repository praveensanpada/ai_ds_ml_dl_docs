🎯 Deep Learning Frameworks
✅ 1) TensorFlow (IMP)

🤖 What is TensorFlow?
TensorFlow is an open-source deep learning framework developed by Google, used to build and train neural networks efficiently for AI, ML, and DL applications.
Based on computational graphs
Supports GPU acceleration
Works with Python, C++, JavaScript, and mobile (TF Lite)

✅ Key Features of TensorFlow
Feature	Description
🔁 Auto Differentiation	Automatically computes gradients (for backpropagation)
🧱 Modular Layers	Build networks layer by layer using tf.keras
⚡ GPU Support	Easily train models on GPU/TPU
📦 Model Export	Save/load models in .h5 or SavedModel format
📱 Mobile Deployment	Use models on Android/iOS with TensorFlow Lite
🌐 Web Integration	Run in browsers with TensorFlow.js
📊 Visualization	Use TensorBoard for model graphs and metrics

✅ Real-Life Use Cases of TensorFlow
Application	Use Case
🧠 Image Classification	Classify animals, diseases, X-rays
🎤 Speech Recognition	Convert voice to text (Google Assistant, Alexa)
📊 Time-Series Forecasting	Predict stock prices, weather
✉️ Sentiment Analysis	Detect emotion in reviews or emails
🏭 Object Detection	Self-driving cars, video surveillance
📱 Mobile AI	On-device face detection, translation

✅ Types of TensorFlow APIs (Interfaces)
API	Description
tf.keras	High-level, easy-to-use API for building DL models
tf.data	Efficient data input pipeline (loading, batching)
tf.function	Convert Python functions into TF graph ops
TensorBoard	Tool for visualizing metrics and model graphs
TF Lite	Deploy models on mobile and IoT devices
TF.js	Run TensorFlow models directly in web browser

============================================================================================================

✅ Basic Example: Build a Neural Network with TensorFlow
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Create model
model = Sequential([
    Dense(64, input_shape=(4,), activation='relu'),
    Dense(64, activation='relu'),
    Dense(3, activation='softmax')  # For 3-class classification
])

# Compile model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Show summary
model.summary()

============================================================================================================

✅ Real-Life Project Example: Iris Flower Classification
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from tensorflow.keras.utils import to_categorical
import numpy as np

# Load and preprocess
X, y = load_iris(return_X_y=True)
y = to_categorical(y)  # One-hot encoding
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Train
model.fit(X_train, y_train, epochs=50, validation_data=(X_test, y_test))

============================================================================================================

🧠 Why TensorFlow is So Popular
Strength	Explanation
✅ Production-ready	Used in enterprise, scalable for large applications
✅ Community Support	Huge community, models, and tutorials available
✅ Cross-platform	Works on desktop, mobile, browser, edge
✅ Integration with Keras	Makes model building very simple
✅ Google-backed	Used in YouTube, Google Photos, Gmail, etc.

✅ Summary
Framework	Best For
TensorFlow	Full-stack deep learning (ML → AI → deployment)

