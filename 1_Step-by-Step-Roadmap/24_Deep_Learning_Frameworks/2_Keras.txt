🎯 Deep Learning Frameworks
✅ 2) Keras (IMP)

🤖 What is Keras?
Keras is a high-level deep learning API, written in Python, running on top of TensorFlow (and previously Theano, CNTK).
It allows you to build and train deep learning models quickly with a few lines of code.

Keras is now officially part of TensorFlow (tf.keras).

✅ Why Keras is So Popular
Reason	Description
📦 Easy to Use	Intuitive syntax, great for beginners
🧱 Modular & Flexible	Define models layer by layer
🎓 Ideal for Education	Used in many ML courses (Coursera, FastAI, etc.)
⚡ Powered by TensorFlow	Same performance, simpler syntax
🧠 Supports Deep Nets	MLPs, CNNs, RNNs, Autoencoders, GANs, etc.

✅ Real-Life Use Cases of Keras
Application	Description
🧠 Image Classification	Detect cats, dogs, faces, medical images
✍️ Sentiment Analysis	Classify tweets, reviews, emails (positive/negative)
📉 Time-Series Forecasting	Predict stock prices, weather, sensor data
🎤 Voice Recognition	Convert audio to text using RNNs or LSTMs
🧬 Biomedical Modeling	Cancer detection, gene sequence classification

✅ Keras Model Types
Type	When to Use
Sequential	Simple stack of layers (feedforward)
Functional API	For complex models like multi-input/output, graphs
Model subclass	Full custom models (e.g., GANs, Autoencoders)

==============================================================================================

✅ Example: Build a Model Using Keras Sequential API
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Simple MLP model
model = Sequential([
    Dense(32, input_shape=(4,), activation='relu'),
    Dense(16, activation='relu'),
    Dense(3, activation='softmax')  # Multiclass output
])

# Compile the model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# View model summary
model.summary()

==============================================================================================

✅ Real Project Example: Iris Flower Classifier
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from tensorflow.keras.utils import to_categorical
import numpy as np

# Load data
X, y = load_iris(return_X_y=True)
y = to_categorical(y)  # Convert to one-hot

# Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Build & train model
model.fit(X_train, y_train, epochs=50, validation_data=(X_test, y_test))

==============================================================================================

✅ Keras Functional API (Advanced Use)
For building models with multiple inputs/outputs or shared layers:
from tensorflow.keras.layers import Input, Dense
from tensorflow.keras.models import Model

# Define input
inputs = Input(shape=(4,))
x = Dense(32, activation='relu')(inputs)
x = Dense(16, activation='relu')(x)
outputs = Dense(3, activation='softmax')(x)

# Create model
model = Model(inputs=inputs, outputs=outputs)
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
model.summary()

==============================================================================================

✅ Common Layers in Keras
Layer	Use Case
Dense	Fully connected layers
Conv2D	Image processing
LSTM, GRU	Time series, text, sequences
Dropout	Regularization to prevent overfitting
Embedding	NLP, text data
BatchNormalization	Speed up training

==============================================================================================

✅ Summary Table
Feature	Description
🧠 Built for DL	CNNs, RNNs, GANs, Autoencoders
🔁 Easy Training	fit(), evaluate(), predict() in one line
🧱 Model Types	Sequential, Functional, Subclassed
📦 Integration	TensorFlow, TPUs, TensorBoard, TF Lite
🧑‍💻 Ideal For	Beginners → Production

==============================================================================================

✅ When to Use Keras
Scenario	Why Keras?
You're new to deep learning	Easy to learn
You want fast prototyping	Build & test models quickly
You’re building custom deep models	Use Functional or Subclassing API
You need to scale to production	It's backed by TensorFlow

==============================================================================================

🔥 Bonus: Save/Load Model in Keras
# Save
model.save('my_model.h5')

# Load
from tensorflow.keras.models import load_model
model = load_model('my_model.h5')

==============================================================================================


